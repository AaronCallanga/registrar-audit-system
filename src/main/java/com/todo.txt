1. Create a mapper that accepts Result(coming from jdbc query) and map to entity/class
2. Create DAO for each entity (acts like a repository), this interacts with the database like querying
3. maybe implement email field for entity, and sending emails, also document status
4. Reporting - Feature: Generate summary reports of requests.
               Number of requests per month.
               Average processing time.
               Most requested document types.
5. Status Tracking (REQUESTED, PROCESSING, READY_FOR_RELEASE, RELEASED, CANCELLED)
6. Audit / Activity Log - Domain: AuditLog
                          Fields: id, action, timestamp, adminUser, documentId, description
                          Purpose: Track what actions admins took (created request, updated, released, deleted).
                          Example: "Admin John released document #23 at 2025-08-16 13:45".
7. Implement Auditing for Enrollment too
8. MAke student number a random uuid
9. If a student year level updated, it should delete all the required documents and change it to a specific year level
       ex: 1st year -> TOR, BC      changed to 2nd Year -> TOR, BC, GOOD MORAL, F138
       delete this ^                                then save this instead ^        -> linked to user
10. implement setUpTables in databaseConnection, create objects of each service dao/service and call the create table
11. enroll student, get the id of the student, use it to save required documents
12. Create a enrollment + student facade. for menu